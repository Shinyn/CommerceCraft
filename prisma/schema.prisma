generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String      @id @default(uuid())
  user_id    String
  title      String
  Products   Product[]   @relation("StoreRelation")
  Categories Category[]  @relation("StoreRelation")
  Billboards Billboard[] @relation("StoreRelation")
  Sizes      Size[]      @relation("StoreRelation")
  Colors     Color[]     @relation("StoreRelation")
}

model Product {
  id           String  @id @default(uuid())
  storeId      String
  title        String
  description  String
  ingredients  String  @default("Bobs")
  price        Int
  image        String
  manufacturer String  @default("BOB")
  category     String  @default("all")
  size         String  @default("kg")
  color        String  @default("yellow")
  isarchived   Boolean @default(false)
  isfeatured   Boolean @default(false)
  stock        Int     @default(0)
  store        Store   @relation("StoreRelation", fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  stock        Int     @default(0)
  @@index([storeId])
}

model Category {
  id      String @id @default(uuid())
  storeId String
  title   String
  store   Store  @relation("StoreRelation", fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([storeId])
}

model Billboard {
  id      String @id @default(uuid())
  storeId String
  text    String
  image   String
  active  Int    @default(0)
  store   Store  @relation("StoreRelation", fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([storeId])
}

model Size {
  id      String @id @default(uuid())
  storeId String
  title   String
  store   Store  @relation("StoreRelation", fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([storeId])
}

model Color {
  id      String @id @default(uuid())
  storeId String
  title   String
  store   Store  @relation("StoreRelation", fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([storeId])
}
